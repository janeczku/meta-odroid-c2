From 0350a517ed3f89f850071b3e740e1869eb89d743 Mon Sep 17 00:00:00 2001
From: Scott Ellis <scott@jumpnowtek.com>
Date: Fri, 11 May 2018 11:54:00 -0400
Subject: [PATCH] Revert "arm64: Add work around for Arm Cortex-A55 Erratum
 1024718"

This reverts commit 41fd9f89c01f9063fc97e3de3bd12968a6b60824.

Odroid-C2 does not boot.
---
 Documentation/arm64/silicon-errata.txt |  1 -
 arch/arm64/Kconfig                     | 14 ------------
 arch/arm64/include/asm/assembler.h     | 40 ----------------------------------
 arch/arm64/include/asm/cputype.h       |  2 --
 arch/arm64/mm/proc.S                   |  5 -----
 5 files changed, 62 deletions(-)

diff --git a/Documentation/arm64/silicon-errata.txt b/Documentation/arm64/silicon-errata.txt
index 3b2f2dd..c1d520d 100644
--- a/Documentation/arm64/silicon-errata.txt
+++ b/Documentation/arm64/silicon-errata.txt
@@ -55,7 +55,6 @@ stable kernels.
 | ARM            | Cortex-A57      | #834220         | ARM64_ERRATUM_834220        |
 | ARM            | Cortex-A72      | #853709         | N/A                         |
 | ARM            | Cortex-A73      | #858921         | ARM64_ERRATUM_858921        |
-| ARM            | Cortex-A55      | #1024718        | ARM64_ERRATUM_1024718       |
 | ARM            | MMU-500         | #841119,#826419 | N/A                         |
 |                |                 |                 |                             |
 | Cavium         | ThunderX ITS    | #22375, #24313  | CAVIUM_ERRATUM_22375        |
diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index be66576..7381eeb 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -464,20 +464,6 @@ config ARM64_ERRATUM_843419
 
 	  If unsure, say Y.
 
-config ARM64_ERRATUM_1024718
-	bool "Cortex-A55: 1024718: Update of DBM/AP bits without break before make might result in incorrect update"
-	default y
-	help
-	  This option adds work around for Arm Cortex-A55 Erratum 1024718.
-
-	  Affected Cortex-A55 cores (r0p0, r0p1, r1p0) could cause incorrect
-	  update of the hardware dirty bit when the DBM/AP bits are updated
-	  without a break-before-make. The work around is to disable the usage
-	  of hardware DBM locally on the affected cores. CPUs not affected by
-	  erratum will continue to use the feature.
-
-	  If unsure, say Y.
-
 config CAVIUM_ERRATUM_22375
 	bool "Cavium erratum 22375, 24313"
 	default y
diff --git a/arch/arm64/include/asm/assembler.h b/arch/arm64/include/asm/assembler.h
index a3ca19e..3c78835 100644
--- a/arch/arm64/include/asm/assembler.h
+++ b/arch/arm64/include/asm/assembler.h
@@ -25,7 +25,6 @@
 
 #include <asm/asm-offsets.h>
 #include <asm/cpufeature.h>
-#include <asm/cputype.h>
 #include <asm/debug-monitors.h>
 #include <asm/page.h>
 #include <asm/pgtable-hwdef.h>
@@ -596,43 +595,4 @@ USER(\label, ic	ivau, \tmp2)			// invalidate I line PoU
 #endif
 	.endm
 
-/*
- * Check the MIDR_EL1 of the current CPU for a given model and a range of
- * variant/revision. See asm/cputype.h for the macros used below.
- *
- *	model:		MIDR_CPU_MODEL of CPU
- *	rv_min:		Minimum of MIDR_CPU_VAR_REV()
- *	rv_max:		Maximum of MIDR_CPU_VAR_REV()
- *	res:		Result register.
- *	tmp1, tmp2, tmp3: Temporary registers
- *
- * Corrupts: res, tmp1, tmp2, tmp3
- * Returns:  0, if the CPU id doesn't match. Non-zero otherwise
- */
-	.macro	cpu_midr_match model, rv_min, rv_max, res, tmp1, tmp2, tmp3
-	mrs		\res, midr_el1
-	mov_q		\tmp1, (MIDR_REVISION_MASK | MIDR_VARIANT_MASK)
-	mov_q		\tmp2, MIDR_CPU_MODEL_MASK
-	and		\tmp3, \res, \tmp2	// Extract model
-	and		\tmp1, \res, \tmp1	// rev & variant
-	mov_q		\tmp2, \model
-	cmp		\tmp3, \tmp2
-	cset		\res, eq
-	cbz		\res, .Ldone\@		// Model matches ?
-
-	.if (\rv_min != 0)			// Skip min check if rv_min == 0
-	mov_q		\tmp3, \rv_min
-	cmp		\tmp1, \tmp3
-	cset		\res, ge
-	.endif					// \rv_min != 0
-	/* Skip rv_max check if rv_min == rv_max && rv_min != 0 */
-	.if ((\rv_min != \rv_max) || \rv_min == 0)
-	mov_q		\tmp2, \rv_max
-	cmp		\tmp1, \tmp2
-	cset		\tmp2, le
-	and		\res, \res, \tmp2
-	.endif
-.Ldone\@:
-	.endm
-
 #endif	/* __ASM_ASSEMBLER_H */
diff --git a/arch/arm64/include/asm/cputype.h b/arch/arm64/include/asm/cputype.h
index 8e32a6f..350c76a 100644
--- a/arch/arm64/include/asm/cputype.h
+++ b/arch/arm64/include/asm/cputype.h
@@ -83,7 +83,6 @@
 #define ARM_CPU_PART_CORTEX_A53		0xD03
 #define ARM_CPU_PART_CORTEX_A73		0xD09
 #define ARM_CPU_PART_CORTEX_A75		0xD0A
-#define ARM_CPU_PART_CORTEX_A55		0xD05
 
 #define APM_CPU_PART_POTENZA		0x000
 
@@ -103,7 +102,6 @@
 #define MIDR_CORTEX_A72 MIDR_CPU_MODEL(ARM_CPU_IMP_ARM, ARM_CPU_PART_CORTEX_A72)
 #define MIDR_CORTEX_A73 MIDR_CPU_MODEL(ARM_CPU_IMP_ARM, ARM_CPU_PART_CORTEX_A73)
 #define MIDR_CORTEX_A75 MIDR_CPU_MODEL(ARM_CPU_IMP_ARM, ARM_CPU_PART_CORTEX_A75)
-#define MIDR_CORTEX_A55 MIDR_CPU_MODEL(ARM_CPU_IMP_ARM, ARM_CPU_PART_CORTEX_A55)
 #define MIDR_THUNDERX	MIDR_CPU_MODEL(ARM_CPU_IMP_CAVIUM, CAVIUM_CPU_PART_THUNDERX)
 #define MIDR_THUNDERX_81XX MIDR_CPU_MODEL(ARM_CPU_IMP_CAVIUM, CAVIUM_CPU_PART_THUNDERX_81XX)
 #define MIDR_THUNDERX_83XX MIDR_CPU_MODEL(ARM_CPU_IMP_CAVIUM, CAVIUM_CPU_PART_THUNDERX_83XX)
diff --git a/arch/arm64/mm/proc.S b/arch/arm64/mm/proc.S
index 5244440..c0af476 100644
--- a/arch/arm64/mm/proc.S
+++ b/arch/arm64/mm/proc.S
@@ -448,11 +448,6 @@ ENTRY(__cpu_setup)
 	cbz	x9, 2f
 	cmp	x9, #2
 	b.lt	1f
-#ifdef CONFIG_ARM64_ERRATUM_1024718
-	/* Disable hardware DBM on Cortex-A55 r0p0, r0p1 & r1p0 */
-	cpu_midr_match MIDR_CORTEX_A55, MIDR_CPU_VAR_REV(0, 0), MIDR_CPU_VAR_REV(1, 0), x1, x2, x3, x4
-	cbnz	x1, 1f
-#endif
 	orr	x10, x10, #TCR_HD		// hardware Dirty flag update
 1:	orr	x10, x10, #TCR_HA		// hardware Access flag update
 2:
-- 
2.7.4

